{"ast":null,"code":"var _jsxFileName = \"/Users/CleopatraVann/Desktop/TheOdinProject/memory-card/src/components/CardGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport uniqid from \"uniqid\";\nimport Card from './Card';\nimport AustriaFlag from '../images/Austria_flag.svg.png';\nimport DenmarkFlag from '../images/Denmark_flag.png';\nimport EstoniaFlag from '../images/Estonia_flag.svg.png';\nimport FranceFlag from '../images/France_flag.svg.png';\nimport GermanyFlag from '../images/Germany_flag.png';\nimport GreeceFlag from '../images/Greece_flag.svg.png';\nimport NorwayFlag from '../images/Norway_flag.png';\nimport PolandFlag from '../images/Poland_flag.svg.png';\nimport SpainFlag from '../images/Spain_flag.png';\nimport UKFlag from '../images/UK_flag.svg.png';\nimport ItalyFlag from '../images/Italy_flag.svg';\nimport NetherlandsFlag from '../images/Netherlands_flag.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createCards() {\n  let cardArray = [];\n  let cards = [Card(AustriaFlag, \"Austria\", \"red\", uniqid()), Card(DenmarkFlag, \"Denmark\", \"red\", uniqid()), Card(EstoniaFlag, \"Estonia\", \"red\", uniqid()), Card(FranceFlag, \"France\", \"green\", uniqid()), Card(GermanyFlag, \"Germany\", \"red\", uniqid()), Card(GreeceFlag, \"Greece\", \"red\", uniqid()), Card(NorwayFlag, \"Norwway\", \"red\", uniqid()), Card(PolandFlag, \"Poland\", \"red\", uniqid()), Card(SpainFlag, \"Spain\", \"red\", uniqid()), Card(UKFlag, \"United Kingdom\", \"red\", uniqid()), Card(ItalyFlag, \"Italy\", \"red\", uniqid()), Card(NetherlandsFlag, \"Netherlands\", \"red\", uniqid())];\n  cards.forEach(card => {\n    cardArray.push(card);\n  });\n  return cardArray;\n}\nfunction shuffleArray(array) {\n  let currentIndex = array.length;\n  let randomIndex;\n\n  //While there remain elemnts to shuffle\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\n\n//CardGrid Functional Components\nconst CardGrid = props => {\n  _s();\n  const {\n    currentScore,\n    bestScore,\n    setCurrentScore,\n    setBestScore\n  } = props;\n  let [cardArray, setCardArry] = useState(createCards());\n  let [pastTurns, setPastTurns] = useState([]);\n  useEffect(() => {\n    const whenCardClicked = card => {\n      let currentCardID = card.id;\n      if (pastTurns.findIndex(turn => turn.id === currentCardID) === -1) {\n        console.log(\"continue\");\n        setPastTurns(pastTurns.concat(card));\n        setCardArry(shuffleArray(cardArray));\n        setCurrentScore(currentScore += 1);\n      } else {\n        console.log(\"end\");\n      }\n    };\n    let cards = document.querySelectorAll('.card');\n    cards.forEach(card => {\n      card.addEventListener(\"click\", () => {\n        whenCardClicked(card);\n      });\n    });\n    return () => {\n      let cards = document.querySelectorAll('.card');\n      cards.forEach(card => {\n        card.removeEventListener(\"click\", () => {\n          whenCardClicked(card);\n        });\n      });\n    };\n  }, [cardArray, pastTurns]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: cardArray.map(card => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        id: card.id,\n        style: card.backgroundColor,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.src,\n          alt: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(CardGrid, \"uNNH8Ff7l0Mn7nqYtBy8G7Ki1gk=\");\n_c = CardGrid;\nexport default CardGrid;\nvar _c;\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","useState","useEffect","uniqid","Card","AustriaFlag","DenmarkFlag","EstoniaFlag","FranceFlag","GermanyFlag","GreeceFlag","NorwayFlag","PolandFlag","SpainFlag","UKFlag","ItalyFlag","NetherlandsFlag","jsxDEV","_jsxDEV","createCards","cardArray","cards","forEach","card","push","shuffleArray","array","currentIndex","length","randomIndex","Math","floor","random","CardGrid","props","_s","currentScore","bestScore","setCurrentScore","setBestScore","setCardArry","pastTurns","setPastTurns","whenCardClicked","currentCardID","id","findIndex","turn","console","log","concat","document","querySelectorAll","addEventListener","removeEventListener","className","children","map","style","backgroundColor","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/CleopatraVann/Desktop/TheOdinProject/memory-card/src/components/CardGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport uniqid from \"uniqid\";\nimport Card from './Card';\nimport AustriaFlag from '../images/Austria_flag.svg.png'\nimport DenmarkFlag from '../images/Denmark_flag.png'\nimport EstoniaFlag from '../images/Estonia_flag.svg.png'\nimport FranceFlag from '../images/France_flag.svg.png'\nimport GermanyFlag from '../images/Germany_flag.png'\nimport GreeceFlag from '../images/Greece_flag.svg.png'\nimport NorwayFlag from '../images/Norway_flag.png'\nimport PolandFlag from '../images/Poland_flag.svg.png'\nimport SpainFlag from '../images/Spain_flag.png'\nimport UKFlag from '../images/UK_flag.svg.png'\nimport ItalyFlag from '../images/Italy_flag.svg'\nimport NetherlandsFlag from '../images/Netherlands_flag.svg'\n\nfunction createCards() {\n    let cardArray = [];\n    let cards = [\n        Card(AustriaFlag, \"Austria\", \"red\", uniqid()),\n        Card(DenmarkFlag, \"Denmark\", \"red\", uniqid()),\n        Card(EstoniaFlag, \"Estonia\", \"red\", uniqid()),\n        Card(FranceFlag, \"France\", \"green\", uniqid()),\n        Card(GermanyFlag, \"Germany\", \"red\", uniqid()),\n        Card(GreeceFlag, \"Greece\", \"red\", uniqid()),\n        Card(NorwayFlag, \"Norwway\", \"red\", uniqid()),\n        Card(PolandFlag, \"Poland\", \"red\", uniqid()),\n        Card(SpainFlag, \"Spain\", \"red\", uniqid()),\n        Card(UKFlag, \"United Kingdom\", \"red\", uniqid()),\n        Card(ItalyFlag, \"Italy\", \"red\", uniqid()),\n        Card(NetherlandsFlag, \"Netherlands\", \"red\", uniqid()),\n    ];\n\n    cards.forEach((card) => {\n        cardArray.push(card);\n    })\n\n    return cardArray;\n}\n\nfunction shuffleArray(array) {\n    let currentIndex = array.length;\n    let randomIndex;\n\n    //While there remain elemnts to shuffle\n    while (currentIndex != 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n}\n\n//CardGrid Functional Components\nconst CardGrid = (props) => {\n    const {currentScore, bestScore, setCurrentScore, setBestScore} = props;\n    let [cardArray, setCardArry] = useState(createCards());\n    let [pastTurns, setPastTurns] = useState([]);\n\n    useEffect(() => {\n        const whenCardClicked = (card) => {\n            let currentCardID = card.id;\n            if (pastTurns.findIndex(turn => turn.id === currentCardID) === -1) {\n                console.log(\"continue\");\n                setPastTurns(pastTurns.concat(card));\n                setCardArry(shuffleArray(cardArray));\n                setCurrentScore(currentScore+=1);\n            }\n            else {\n                console.log(\"end\");\n            }\n        };\n\n        let cards = document.querySelectorAll('.card');\n        cards.forEach((card) => {\n            card.addEventListener(\"click\", () => {\n                whenCardClicked(card);\n            });\n        })\n\n        return () => {\n            let cards = document.querySelectorAll('.card');\n            cards.forEach((card) => {\n                card.removeEventListener(\"click\", () => {\n                    whenCardClicked(card);\n                });\n            })\n        }\n    }, [cardArray, pastTurns])\n\n    return (\n        <div className='card-grid'>\n            {cardArray.map((card) => {\n                return (\n                    <div\n                        className='card'\n                        key={card.id}\n                        id={card.id}\n                        style={card.backgroundColor}\n                    >\n                        <img src={card.src} alt={card.title}></img>\n                        <figcaption>{card.title}</figcaption>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default CardGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}